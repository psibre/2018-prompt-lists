repositories {
    ivy {
        url 'https://catalog.ldc.upenn.edu/docs'
        layout 'pattern', {
            artifact 'LDC93S1/[module].[ext]'
        }
    }
}

configurations {
    data
}

dependencies {
    data group: 'edu.upenn.ldc.timit', name: 'PROMPTS', version: '1988-10-31', ext: 'TXT'
}

task processPrompts(type: ProcessPrompts) {
    destFile = file("$buildDir/prompts.md")
}

class ProcessPrompts extends DefaultTask {

    @OutputFile
    final RegularFileProperty destFile = newOutputFile()

    @TaskAction
    void process() {
        project.copy {
            from project.configurations.data
            into project.buildDir
            eachFile { fileDetails ->
                destFile.get().asFile.withWriter { writer ->
                    writer.println "---"
                    writer.println "header-includes: |"
                    writer.println "    \\usepackage{media9}"
                    writer.println "    \\usepackage{etoolbox}"
                    writer.println "    \\appto\\frame{%"
                    writer.println "      \\includemedia[addresource=beep.mp3, width=1pt, height=1pt, activate=pageopen, noplaybutton, attachfiles, flashvars={%"
                    writer.println "        source=beep.mp3&autoPlay=true&hideBar=true"
                    writer.println "      }]{}{APlayer.swf}"
                    writer.println "    }"
                    writer.println "revealjs-url: https://revealjs.com"
                    writer.println "include-after:"
                    writer.println "  - <audio src='beep.mp3' id='beep'></audio>"
                    writer.println "  - <script>Reveal.addEventListener( 'slidechanged', function( event ) { var beep = document.getElementById('beep'); beep.play(); } );</script>"
                    writer.println "..."
                    writer.println()

                    fileDetails.file.eachLine { line ->
                        if (line.startsWith(';'))
                            return
                        (line =~ /(.+) \((.+)\)/).each { all, prompt, code ->
                            writer.println "## $prompt"
                            writer.println()
                            writer.println code
                            writer.println()
                        }
                    }
                }
                fileDetails.exclude()
            }
        }
    }
}
